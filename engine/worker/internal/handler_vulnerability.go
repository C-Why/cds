package internal

import (
	"context"
	"fmt"
	"net/http"

	"github.com/ovh/cds/sdk/cdsclient"

	"github.com/ovh/cds/sdk/log"
)

func vulnerabilityHandler(wk *CurrentWorker) http.HandlerFunc {
	return func(w http.ResponseWriter, r *http.Request) {
		if r.Body == nil {
			w.WriteHeader(http.StatusBadRequest)
			return
		}

		defer r.Body.Close()
		uri := fmt.Sprintf("/queue/workflows/%d/vulnerability", wk.currentJob.wJob.ID)
		_, _, code, err := wk.client.(cdsclient.Raw).Request(context.Background(), "POST", uri, r.Body)
		if err == nil {
			log.Info("vulnerabilityHandler> Send vulnerability report OK")
			return
		}

		log.Warning("vulnerabilityHandler> unable to send vulnerability result: %d %v", code, err)
		writeError(w, r, err)
	}
}
